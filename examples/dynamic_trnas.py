import pinetree as pt

RB_COPY = 100
TS_COPY = [100, 100]
RBS_STRENGTH = [10000.0, 5000.0]
TRNA_CHRG_RATES = [100.0, 100.0]
TRNA_PROPORTIONS = (0.4, 0.6)
TOTAL_TRNA = 100
TIME_LIMIT = 100
TIME_STEP = 5
SEED = 1

#seq_9_1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAATATTATTATTATAAATATTATTATTATTATTATTATAAATATTATTATTATTATTATTATTATTATAAATATAAATATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATAAATATTATTATTATTATAAATATTATTATTATTATTATTATTATTATTATTATTATTATTATTATTATAAATATTATTATTATTATTATTATTATTATAAATATTATTATAAAAAATATTATTATTATTATTATTATTATAAAAAAAAAAAAAAAAAAAA"

seq_6_4 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAATATTATTATAAAAAATATTATTATTATTATAAATATAAATATTATTATTATTATTATTATTATTATAAATATAAATATTATTATAAATATTATTATAAATATTATTATAAATATAAAAAATATTATTATTATTATAAAAAAAAATATTATTATAAAAAAAAATATTATTATTATTATAAAAAATATAAATATAAATATTATTATTATTATTATAAAAAAAAAAAATATAAAAAAAAATATAAAAAATATTATTATAAAAAAAAATATTATAAAAAAAAAAAATATTATTATAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"

sim = pt.Model(cell_volume=8e-16)
sim.seed(SEED)
sim.add_ribosome(copy_number=RB_COPY, speed=1, footprint=15)

i = 0
while i < TS_COPY[1]:
    transcript = pt.Transcript("transcript", 350)
    transcript.add_gene(name="proteinY", start=31, stop=330,
                    rbs_start=(31 - 15), rbs_stop=31, rbs_strength=RBS_STRENGTH[1])
    transcript.add_seq(seq=seq_6_4)
    sim.register_transcript(transcript)
    i += 1

tRNA_map = {"AAA": ["TTT"], "TAT": ["ATA"]}
tRNA_counts = {"TTT": [int(TOTAL_TRNA*TRNA_PROPORTIONS[0]), 0], "ATA": [int(TOTAL_TRNA*TRNA_PROPORTIONS[1]), 0]}
tRNA_rates = {"TTT": TRNA_CHRG_RATES[0], "ATA": TRNA_CHRG_RATES[1]}
sim.add_trna(tRNA_map, tRNA_counts, tRNA_rates)
sim.simulate(time_limit=TIME_LIMIT, time_step=TIME_STEP, output="dynamic_trnas.tsv")